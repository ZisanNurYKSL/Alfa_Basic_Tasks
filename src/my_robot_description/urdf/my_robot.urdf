<?xml version = "1.0"?>
<robot name="my_robot"  xmlns:xacro="http://www.ros.org/wiki/xacro"> <!--basit bir urdf dosyasında tanımlama gerçekleştiremiyorum bunun için xmlns'i de eklemeliyim-->
    
    <material name = "cyan">
        <color rgba = "0 1 1 1" />
    </material>

     <material name = "black">
        <color rgba = "0 0 0 1" />
    </material>

    <xacro:property name = "base_with" value = "0.6" />
    <xacro:property name = "base_length" value = "0.4" />
    <xacro:property name = "base_height" value = "0.2" />

    <xacro:property name = "wheel_radius" value = "0.1" />
    <xacro:property name = "wheel_length" value = "0.05" />

    <xacro:property name = "caster_wheel_radius" value = "0.05" />



    <link name = "base_link" >
        <visual>
            <geometry>
                <box size = "${base_with} ${base_length} ${base_height}" />  <!--with, length, heigt--> 
            </geometry>
            <origin xyz = "0 0 0" rpy = "0 0 0" />
            <material name = "cyan"/>
        </visual>
    </link>

    <link name = "right_wheel_link">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <origin xyz = "0 0 0 " rpy = "${pi/2} 0 0" /> <!--bu şekilde bir gösterim ile tekerimi 90 derece döndürmeyi sağlarım-->
            <material name = "black" />
        </visual>
    </link>

    <link name = "left_wheel_link">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <origin xyz = "0 0 0 " rpy = "${pi/2} 0 0" /> <!--bu şekilde bir gösterim ile tekerimi 90 derece döndürmeyi sağlarım-->
            <material name = "black" />
        </visual>
    </link>

    <link name = "pre_right_caster_wheel_link" >
      <visual>
            <geometry>
                <sphere radius = "${caster_wheel_radius}" />  
            </geometry>
            <origin xyz = "0 0 0 " rpy = "0 0 0" />
            <material name = "black" />
        </visual>
    </link>

    <link name = "pre_left_caster_wheel_link" >
      <visual>
            <geometry>
                <sphere radius = "${caster_wheel_radius}" />  
            </geometry>
            <origin xyz = "0 0 0 " rpy = "0 0 0" />
            <material name = "black" />
        </visual>
    </link>

    <link name = "back_right_caster_wheel_link" >
      <visual>
            <geometry>
                <sphere radius = "${caster_wheel_radius}" />  
            </geometry>
            <origin xyz = "0 0 0 " rpy = "0 0 0" />
            <material name = "black" />
        </visual>
    </link>

    <link name = "back_left_caster_wheel_link" >
      <visual>
            <geometry>
                <sphere radius = "${caster_wheel_radius}" />  
            </geometry>
            <origin xyz = "0 0 0 " rpy = "0 0 0" />
            <material name = "black" />
        </visual>
    </link>

 

    <joint name = "base_right_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "right_wheel_link" />
        <origin xyz = "${- (base_height / 2) + (wheel_radius) }
                       ${-((base_length / 2) + (wheel_length / 2))}
                       ${- wheel_radius}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>

    <joint name = "base_left_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "left_wheel_link" />
        <origin xyz = "${- (base_height / 2) + (wheel_radius) }
                       ${((base_length / 2) + (wheel_length / 2))}
                       ${- wheel_radius}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>

    <joint name = "base_pre_right_caster_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "pre_right_caster_wheel_link" />
        <origin xyz = "${-(caster_wheel_radius * 6) + (caster_wheel_radius)} 
                       ${(base_length / 2) - (caster_wheel_radius)} 
                       ${-3 * (caster_wheel_radius)}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>

    <joint name = "base_pre_left_caster_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "pre_left_caster_wheel_link" />
        <origin xyz = "${-(caster_wheel_radius * 6) + (caster_wheel_radius)} 
                       ${-(base_length / 2) + (caster_wheel_radius)} 
                       ${-3 * (caster_wheel_radius)}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>

    <joint name = "base_back_right_caster_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "back_right_caster_wheel_link" />
        <origin xyz = "${(caster_wheel_radius * 6) - (caster_wheel_radius)} 
                       ${(base_length / 2) - (caster_wheel_radius)} 
                       ${-3 * (caster_wheel_radius)}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>

    <joint name = "base_back_left_caster_wheel_joint" type = "continuous">
        <parent link = "base_link" />
        <child link = "back_left_caster_wheel_link" />
        <origin xyz = "${(caster_wheel_radius * 6) - (caster_wheel_radius)} 
                       ${-(base_length / 2) + (caster_wheel_radius)} 
                       ${-3 * (caster_wheel_radius)}" 
                       rpy = "0 0 0" />  <!--aşağı yönde kaydırdığım için - yazdım-->
        <!--sol tekerleği aslında sağ tekerlek olarak tasarlayıp fakat gerçekte sol tekerlek elde 
        ettiğim zaman bunu tekrardan sağ tekerlek yapabilmek için y eksenini - yöne çevirerek bu durumu düzeltebilrim Bu durumu yukarıdaki y ekseninde yaptım-->
        <axis xyz = "0 1 0"/>   <!--tekerleğimin istediğim yönde dönmesi için y ekseni etrafında dönmesine izin vermeliyim.
        continuous tipi eklem kullanıyorsam onun döneceği ekseni tanımlamam gerekiyordu. -->
    </joint>
</robot>
